name: Build and Deploy Pages

on:
  push:
    branches: [main, dev, "feat/**"]

permissions:
  contents: write

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust (stable) with wasm32 target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true

      - name: Cache Cargo build
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            puzzle-wasm

      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: latest

      - name: Build WASM (wasm-pack -> web/public/pkg)
        env:
          OUT_DIR: ${{ github.workspace }}/web/public/pkg
        run: |
          rm -rf "$OUT_DIR"
          mkdir -p "$OUT_DIR"
          wasm-pack build --target web --release --out-dir "$OUT_DIR" puzzle-wasm
          rm -f "$OUT_DIR/.gitignore"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js cache (pnpm)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: web/pnpm-lock.yaml

      - name: Install web dependencies
        working-directory: web
        run: pnpm install --frozen-lockfile=false

      - name: Build modern web UI (Vite)
        working-directory: web
        env:
          BASE_PATH: ${{ format('/{0}/{1}/', github.event.repository.name, github.ref_name) }}
        run: pnpm build

      - name: Ensure WASM artifacts are in dist
        shell: bash
        env:
          OUT_DIR: ${{ github.workspace }}/web/public/pkg
        run: |
          set -euo pipefail
          mkdir -p web/dist/pkg
          shopt -s nullglob
          files=("$OUT_DIR"/*)
          cp -av "${files[@]}" web/dist/pkg/
          cp -av web/public/wasm-bridge.js web/dist/ || true
          cp -av web/public/puzzle web/dist/
          for f in puzzles.json shapes.json; do
            cp -av "web/public/$f" web/dist/;
          done

      - name: Checkout gh-pages to clear subfolder
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: ghp

      - name: Delete subfolder and push
        run: |
          set -e
          cd ghp
          BRANCH_DIR="${{ github.ref_name }}"
          if [ -d "$BRANCH_DIR" ]; then
            echo "Removing gh-pages/$BRANCH_DIR before deploy"
            git rm -r --ignore-unmatch "$BRANCH_DIR" || true
          fi
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit -m "ci: clear $BRANCH_DIR before deploy" || echo "nothing to commit"
          git push origin gh-pages

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: web/dist
          destination_dir: ${{ github.ref_name }}
          keep_files: true
          enable_jekyll: false
